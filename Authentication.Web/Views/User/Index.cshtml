@model UserViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@Model.StoredUser.Email</h1>

@using (Html.BeginForm("ChangeEmail", "User", FormMethod.Post))
{
    if (!string.IsNullOrWhiteSpace(ViewBag.ErrorMessage))
    {
        <red>@ViewBag.ErrorMessage</red>
    }
    <text> Change email address </text>
    @Html.TextBox("EmailAddress", null, new { @class = "form-control", placeholder = "enter new email address" })

    @Html.Hidden("userId", "@Model.StoredUser.UserId")

    <input type="submit" value="Change" />
}

@using (Html.BeginForm("VerifyEmailAddress", "User", FormMethod.Post))
{
    var email = Model.StoredUser.Email;
    @Html.Hidden("emailAddress", email)
    @Html.Hidden("userId", "@Model.StoredUser.UserId")

    <input type="submit" value="Verify email address" />
}



<h2>User info</h2>
<ul>
    <li>Email: @Model.StoredUser.Email</li>
    <li>Email is verified: @Model.StoredUser.EmailIsVerified</li>
    <li>Created date: @Model.StoredUser.CreatedDate</li>
    <li>Last updated date: @Model.StoredUser.LastUpdatedDate</li>
</ul>

<h2>History</h2>
<!--Yes, I know it's very oldskool to use tables, but the purpose of the exercise was not html-->
<table>
    <tr>
        <th>Action</th>
        <th>Time</th>
        <th>Data</th>

    </tr>
    @foreach (var authenticationEvent in Model.History)
    {
        <tr>
            @*<td>@authenticationEvent.UserId</td>*@
            <td>@authenticationEvent.EventAction</td>
            @*<td>@authenticationEvent.Id</td>*@
            <td>@authenticationEvent.TimeStamp</td>
            <td>@authenticationEvent.UserInfo</td>

        </tr>
    }
</table>



